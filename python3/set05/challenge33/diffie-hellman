#!/usr/bin/env python3
from random import randint
from hashlib import sha256


class dh:
    def __init__(self, p=None, g=2):
        if p is None:
            # NIST's value for p
            self.p = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA237327FFFFFFFFFFFFFFFF
        else:
            self.p = p
        self.g = g

        self._private_key = randint(0, self.p)
        self.public_key = pow(self.g, self._private_key, self.p)

    def generate_session_key(self, partners_public_key):
        s = pow(partners_public_key, self._private_key, self.p)
        return sha256(s.to_bytes((s.bit_length() + 7) // 8, "big")).digest()


def test_dh(p=None, g=2, loops=10):
    for _ in range(loops):
        alice = dh(p=p, g=g)
        bob = dh(p=p, g=g)

        alices_session_key = alice.generate_session_key(bob.public_key)
        bobs_session_key = bob.generate_session_key(alice.public_key)

        if alices_session_key != bobs_session_key:
            print("Alice & Bob's session keys are different!")
            return False
    return True


if test_dh(p=37, g=5, loops=10000):
    print("Diffie-Hellman Small Number Tests Passed!")
else:
    print("Diffie-Hellman Small Number Tests Failed!")

if test_dh(p=None, g=2, loops=10):
    print("Diffie-Hellman Big Number Tests Passed!")
else:
    print("Diffie-Hellman Big Number Tests Failed!")
